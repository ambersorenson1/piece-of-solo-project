{"ast":null,"code":"var _jsxFileName = \"/Users/ambersorenson/PracticeMakesPerfect/ThisIsTheFolder/piece-of-solo-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./App.css\";\nimport data from \"./mock-data.json\";\nimport ReadOnlyRow from \"./components/ReadOnlyRow\";\nimport EditableRow from \"./components/EditableRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [medications, setMedications] = useState(data);\n  const [addFormData, setAddFormData] = useState({\n    medicationName: \"\",\n    dosage: \"\",\n    timeOfMeds: \"\"\n  });\n  const [editFormData, setEditFormData] = useState({\n    medicationName: \"\",\n    dosage: \"\",\n    timeOfMeds: \"\"\n  });\n  const [editMedicationId, setEditMedicationId] = useState(null);\n\n  const handleAddFormChange = event => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n    const newFormData = { ...addFormData\n    };\n    newFormData[fieldName] = fieldValue;\n    setAddFormData(newFormData);\n  };\n\n  const handleEditFormChange = event => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n    const newFormData = { ...editFormData\n    };\n    newFormData[fieldName] = fieldValue;\n    setEditFormData(newFormData);\n  };\n\n  const handleAddFormSubmit = event => {\n    event.preventDefault();\n    const newMedication = {\n      id: nanoid(),\n      medicationName: addFormData.medicationName,\n      dosage: addFormData.dosage,\n      timeOfMeds: addFormData.timeOfMeds\n    };\n    const newMedications = [...medications, newMedication];\n    setMedications(newMedications);\n  };\n\n  const handleEditFormSubmit = event => {\n    event.preventDefault();\n    const editedMedication = {\n      id: editMedicationId,\n      medicationName: editFormData.medicationName,\n      dosage: editFormData.dosage,\n      timeOfMeds: editFormData.timeOfMeds\n    };\n    const newMedications = [...medications];\n    const index = medications.findIndex(medication => medication.id === editMedicationId);\n    newMedications[index] = editedMedication;\n    setMedications(newMedications);\n    setEditMedicationId(null);\n  };\n\n  const handleEditClick = (event, medication) => {\n    event.preventDefault();\n    setEditMedicationId(medication.id);\n    const formValues = {\n      medicationName: medication.medicationName,\n      dosage: medication.dosage,\n      timeOfMeds: medication.timeOfMeds\n    };\n    setEditFormData(formValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditMedicationId(null);\n  };\n\n  const handleDeleteClick = medicationId => {\n    const newMedications = [...medications];\n    const index = medications.findIndex(medication => medication.id === medicationId);\n    newMedications.splice(index, 1);\n    setMedications(newMedications);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleEditFormSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Medication Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Dosage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Time of Meds\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: medications.map(medication => /*#__PURE__*/_jsxDEV(Fragment, {\n            children: editMedicationId === medication.id ? /*#__PURE__*/_jsxDEV(EditableRow, {\n              editFormData: editFormData,\n              handleEditFormChange: handleEditFormChange,\n              handleCancelClick: handleCancelClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(ReadOnlyRow, {\n              medication: medication,\n              handleEditClick: handleEditClick,\n              handleDeleteClick: handleDeleteClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a Medication\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"medicationName\",\n        required: \"required\",\n        placeholder: \"Enter a medication name...\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"dosage\",\n        required: \"required\",\n        placeholder: \"Enter the dosage amount...\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"timeOfMeds\",\n        required: \"required\",\n        placeholder: \"Enter time of medication...\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"BW1z5YRsbJTe5R5XyeaqgsJxMY0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ambersorenson/PracticeMakesPerfect/ThisIsTheFolder/piece-of-solo-project/src/App.js"],"names":["React","useState","Fragment","nanoid","data","ReadOnlyRow","EditableRow","App","medications","setMedications","addFormData","setAddFormData","medicationName","dosage","timeOfMeds","editFormData","setEditFormData","editMedicationId","setEditMedicationId","handleAddFormChange","event","preventDefault","fieldName","target","getAttribute","fieldValue","value","newFormData","handleEditFormChange","handleAddFormSubmit","newMedication","id","newMedications","handleEditFormSubmit","editedMedication","index","findIndex","medication","handleEditClick","formValues","handleCancelClick","handleDeleteClick","medicationId","splice","map"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./App.css\";\nimport data from \"./mock-data.json\";\nimport ReadOnlyRow from \"./components/ReadOnlyRow\";\nimport EditableRow from \"./components/EditableRow\";\n\nconst App = () => {\n  const [medications, setMedications] = useState(data);\n  const [addFormData, setAddFormData] = useState({\n    medicationName: \"\",\n    dosage: \"\",\n    timeOfMeds: \"\",\n  });\n\n  const [editFormData, setEditFormData] = useState({\n    medicationName: \"\",\n    dosage: \"\",\n    timeOfMeds: \"\",\n  });\n\n  const [editMedicationId, setEditMedicationId] = useState(null);\n\n  const handleAddFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...addFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setAddFormData(newFormData);\n  };\n\n  const handleEditFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...editFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setEditFormData(newFormData);\n  };\n\n  const handleAddFormSubmit = (event) => {\n    event.preventDefault();\n\n    const newMedication = {\n      id: nanoid(),\n      medicationName: addFormData.medicationName,\n      dosage: addFormData.dosage,\n      timeOfMeds: addFormData.timeOfMeds,\n    };\n\n    const newMedications = [...medications, newMedication];\n    setMedications(newMedications);\n  };\n\n  const handleEditFormSubmit = (event) => {\n    event.preventDefault();\n\n    const editedMedication = {\n      id: editMedicationId,\n      medicationName: editFormData.medicationName,\n      dosage: editFormData.dosage,\n      timeOfMeds: editFormData.timeOfMeds,\n    };\n\n    const newMedications = [...medications];\n\n    const index = medications.findIndex((medication) => medication.id === editMedicationId);\n\n    newMedications[index] = editedMedication;\n\n    setMedications(newMedications);\n    setEditMedicationId(null);\n  };\n\n  const handleEditClick = (event, medication) => {\n    event.preventDefault();\n    setEditMedicationId(medication.id);\n\n    const formValues = {\n      medicationName: medication.medicationName,\n      dosage: medication.dosage,\n      timeOfMeds: medication.timeOfMeds,\n    };\n\n    setEditFormData(formValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditMedicationId(null);\n  };\n\n  const handleDeleteClick = (medicationId) => {\n    const newMedications = [...medications];\n\n    const index = medications.findIndex((medication) => medication.id === medicationId);\n\n    newMedications.splice(index, 1);\n\n    setMedications(newMedications);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <form onSubmit={handleEditFormSubmit}>\n        <table>\n          <thead>\n            <tr>\n              <th>Medication Name</th>\n              <th>Dosage</th>\n              <th>Time of Meds</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {medications.map((medication) => (\n              <Fragment>\n                {editMedicationId === medication.id ? (\n                  <EditableRow\n                    editFormData={editFormData}\n                    handleEditFormChange={handleEditFormChange}\n                    handleCancelClick={handleCancelClick}\n                  />\n                ) : (\n                  <ReadOnlyRow\n                    medication={medication}\n                    handleEditClick={handleEditClick}\n                    handleDeleteClick={handleDeleteClick}\n                  />\n                )}\n              </Fragment>\n            ))}\n          </tbody>\n        </table>\n      </form>\n\n      <h2>Add a Medication</h2>\n      <form onSubmit={handleAddFormSubmit}>\n        <input\n          type=\"text\"\n          name=\"medicationName\"\n          required=\"required\"\n          placeholder=\"Enter a medication name...\"\n          onChange={handleAddFormChange}\n        />\n        <input\n          type=\"text\"\n          name=\"dosage\"\n          required=\"required\"\n          placeholder=\"Enter the dosage amount...\"\n          onChange={handleAddFormChange}\n        />\n        <input\n          type=\"text\"\n          name=\"timeOfMeds\"\n          required=\"required\"\n          placeholder=\"Enter time of medication...\"\n          onChange={handleAddFormChange}\n        />\n        <button type=\"submit\">Add</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}